# yaml-language-server: $schema=values.schema.json
# Default values for prospectml chart.
# This is a YAML-formatted file.
# Declare variables to be passed into templates.

################################################################################
## @section Deployment Parameters
## @descriptionStart
## This section is used to configure the prospectml deployment
## @descriptionEnd
################################################################################

## @param replicaCount The replicaCount used for deployment manifests.
replicaCount: 1

# Image configuration
image:
  ## @param image.repository Override chart default image
  repository: algorithmicresearch/prospectml
  ## @param image.tag Override chart default image
  tag: "latest"
  ## @param image.pullPolicy The image pullPolicy for [CronJob, Deployment, Job, RayCluster, RayService, Testing]
  pullPolicy: Always

# Flask configuration
flask:
  ## @param flask.env The flask configuration to set the environment
  env: "Production"
  ## @param flask.secretKey The flask secretKey used for cryptographic signing of session cookies and other sensitive data
  secretKey: "changeme"

################################################################################
## @section Logging Configuration
## This section configures the logging behavior for the application.
## You can specify the minimum logging level and the output format for the logs.
################################################################################
logging:
  ## @param logging.level The minimum logging level to be outputted.
  ## Typical values include: "DEBUG", "INFO", "WARN", "ERROR", "FATAL".
  ## Setting to "INFO" will include INFO level messages and above (WARN, ERROR, FATAL).
  ## Default: "INFO".
  level: "INFO"
  ## @param logging.format The format for the log output.
  ## Common formats are "json" for structured logging (suitable for log aggregators like ELK stack) or "text" for human-readable output.
  ## Default: "json".
  format: "json"

################################################################################
# Application resources
## @section Application Resources
## Configure resource requests and limits for the application container.
## Resource requests are guaranteed by Kubernetes, while limits are the maximum resources a container can use.
## For optimal performance and stability, it is recommended to set both requests and limits.
################################################################################
resources:
  requests:
    ## @param resources.requests.memory Amount of memory (e.g., 256Mi, 2Gi) to request for the application container.
    ## This is the minimum amount of memory guaranteed to the container.
    memory: "2Gi"
    ## @param resources.requests.cpu Amount of CPU (e.g., 100m, 1) to request for the application container.
    ## This is the minimum amount of CPU guaranteed to the container.
    cpu: "1"
  limits:
    ## @param resources.limits.memory Maximum amount of memory (e.g., 512Mi, 4Gi) the application container is allowed to use.
    ## If the container exceeds this limit, it may be terminated (OOMKilled).
    memory: "4Gi"
    ## @param resources.limits.cpu Maximum amount of CPU (e.g., 200m, 2) the application container is allowed to use.
    ## If the container exceeds this limit, its CPU usage will be throttled.
    cpu: "2"

################################################################################
## @section Application Configuration (configmap)
## This section defines configuration parameters that are exposed via a Kubernetes ConfigMap,
## making them available as environment variables within the application pods.
################################################################################
config:
  ## @param config.PYTHONPATH The value for the PYTHONPATH environment variable.
  ## This specifies the search path for Python modules.
  PYTHONPATH: /app
  ## @param config.PYTHONUNBUFFERED The value for the PYTHONUNBUFFERED environment variable.
  ## Setting this to '1' forces the stdout and stderr streams to be unbuffered.
  PYTHONUNBUFFERED: 1
  ## @param config.SECRET_KEY The secret key used by the application for cryptographic operations (e.g., session management).
  ## NOTE: This should be a strong, randomly generated value in production. Defaults to 'changeme'.
  SECRET_KEY: changeme
  ## @param config.K8S_NAMESPACE The Kubernetes namespace where the application is deployed.
  ## Defaults to 'prospectml'.
  K8S_NAMESPACE: prospectml
  ## @param config.STORAGE_TYPE The type of storage backend used by the application.
  ## e.g., 'hostpath', 's3', 'minio'.
  STORAGE_TYPE: hostpath
  ## @param config.MINIO_ENDPOINT The endpoint URL for the MinIO service.
  ## e.g., 'localdev-minio:9000'.
  MINIO_ENDPOINT: localdev-minio:9000
  ## @param config.MINIO_ACCESS_KEY The access key for connecting to the MinIO service.
  ## NOTE: This is a sensitive value. Defaults to 'minioadmin'.
  MINIO_ACCESS_KEY: minioadmin
  ## @param config.MINIO_SECRET_KEY The secret key for connecting to the MinIO service.
  ## NOTE: This is a highly sensitive value. Defaults to 'changeme'.
  MINIO_SECRET_KEY: changeme
  ## @param config.WEB_SERVICE_URL The base URL for the web service.
  ## Used for internal communication or by clients.
  WEB_SERVICE_URL: http://prospectml
  ## @param config.AGENT_IMAGE The Docker image to use for agents.
  ## When using a production image, it might be more stable and secure.
  AGENT_IMAGE: algorithmicresearch/prospectml:latest
  ## @param config.APP_URL The base URL for the application's own service for internal API calls.
  ## This is typically the Kubernetes internal service name and namespace.
  APP_URL: "http://prospectml.prospectml.svc.cluster.local"
  ## @param config.API_BASE_URL The base URL for the application's internal API.
  ## In many cases, this might be the same as APP_URL for internal communication.
  API_BASE_URL: "http://prospectml.prospectml.svc.cluster.local"
  ## @param config.SERVICE_URL The generic service URL for the application, potentially for external or internal use.
  ## This might also be the same as APP_URL. Ensure consistency in your application's configuration.
  SERVICE_URL: "http://prospectml.prospectml.svc.cluster.local"

## @param env ProspectML environment variables
## env.TEST: test will add any environment variables in this section
env:

################################################################################
## @section Agent Configuration
## This section configures the settings for the processing or AI agent within the application.
################################################################################
agent:
  ## @param agent.image The Docker image to use for the agent pods.
  ## This specifies the image name and tag (e.g., algorithmicresearch/prospectml:latest).
  image: algorithmicresearch/prospectml:latest
  ## @param agent.maxConcurrentRuns The maximum number of concurrent tasks or runs that an agent can process.
  ## Adjust this value based on the agent's resource capacity and workload.
  maxConcurrentRuns: 3
  ## @param agent.defaultModel The default AI model to be used by the agent if not specified otherwise.
  ## Example: "claude-3-sonnet-20240229".
  defaultModel: "claude-3-sonnet-20240229"
  ## @param agent.defaultMaxIterations The default maximum number of iterations for a process run by the agent.
  ## This helps prevent infinite loops or excessively long tasks.
  defaultMaxIterations: 50
  ## @param agent.enableStorage Enables or disables the use of storage for the agent.
  ## Set to 'true' to enable storage, 'false' otherwise.
  enableStorage: true
  ## @param agent.storageProvider The storage backend provider to use if storage is enabled.
  ## Example: "minio", "s3", "gcloud", "hostpath".
  storageProvider: "minio"
  ## @param agent.storageBucket The name of the storage bucket to be used by the agent.
  ## Ensure this bucket exists and the agent has appropriate permissions.
  storageBucket: "prospectml-outputs"
  ## @section Agent Resource Requests and Limits
  ## Configure resource requests and limits for the agent container.
  ## Setting these values correctly is crucial for performance, stability, and cluster efficiency.
  resources:
    requests:
      ## @param agent.resources.requests.memory Amount of memory (e.g., "4Gi") to request for the agent container.
      ## This is the minimum amount of memory guaranteed to the container by Kubernetes.
      memory: "4Gi"
      ## @param agent.resources.requests.cpu Amount of CPU (e.g., "2" for 2 cores or "500m" for 0.5 core) to request for the agent container.
      ## This is the minimum amount of CPU guaranteed to the container by Kubernetes.
      cpu: "2"
    limits:
      ## @param agent.resources.limits.memory Maximum amount of memory (e.g., "8Gi") the agent container is allowed to use.
      ## If the container exceeds this limit, it may be terminated (OOMKilled).
      memory: "8Gi"
      ## @param agent.resources.limits.cpu Maximum amount of CPU (e.g., "4" for 4 cores) the agent container is allowed to use.
      ## If the container exceeds this limit, its CPU usage will be throttled.
      cpu: "4"

################################################################################
## @section AI Providers Configuration
## This section configures the API keys for various Artificial Intelligence (AI) service providers.
## It allows the application to authenticate and interact with these external AI models.
################################################################################
aiProviders:
  anthropic:
    ## @param aiProviders.anthropic.apiKey The API key for authenticating with the Anthropic AI service.
    apiKey: ""
  openai:
    ## @param aiProviders.openai.apiKey The API key for authenticating with the OpenAI AI service.
    apiKey: ""
  google:
    ## @param aiProviders.google.apiKey The API key for authenticating with Google AI services.
    apiKey: ""

################################################################################
## @section Weights & Biases (W&B) Configuration (Optional)
## This section configures integration with Weights & Biases, an MLOps platform for tracking
## machine learning experiments, visualizing results, and collaborating with teams.
## This integration is optional; if not provided, W&B logging features will not be enabled.
################################################################################
wandb:
  ## @param wandb.apiKey The API key for authenticating with the Weights & Biases service.
  apiKey: ""


################################################################################
## @section AWS Configuration
## @descriptionStart
## Optional AWS credentials for the application to use.
## These are commonly used when interacting with AWS services like S3.
## You can pass them via environment variables or secrets.
## @descriptionEnd
################################################################################
aws:
  ## @param aws.accessKeyId AWS Access Key ID
  ## Example:
  ##   aws:
  ##     accessKeyId: "${AWS_ACCESS_KEY_ID}"
  accessKeyId: ""
  ## @param aws.secretAccessKey AWS Secret Access Key
  ## Example:
  ##   aws:
  ##     secretAccessKey: "${AWS_SECRET_ACCESS_KEY}"
  secretAccessKey: ""

################################################################################
## @section License Configuration
## This section configures the application's licensing details, integrating with a
## license management service like Keygen.
## All parameters are required, providing a valid configuration is necessary for license validation.
################################################################################
license:
  ## @param license.key The license key or token for the application.
  key: ""
  ## @param license.keygenAccountId The account ID from the Keygen licensing service.
  keygenAccountId: ""
  ## @param license.keygenProductToken The product token associated with your product in Keygen.
  keygenProductToken: ""
  ## @param license.fingerprint A unique identifier, often generated from the machine or environment,
  ## used to scope license validation to a particular instance.
  fingerprint: ""

################################################################################
## @section Health Check Configuration
## This section configures the liveness and/or readiness probes for the application containers,
## allowing Kubernetes to determine their health and readiness to receive traffic.
################################################################################
healthcheck:
  ## @param healthcheck.enabled Enable or disable the health checks for the application container.
  ## Set to 'true' to enable liveness and readiness probes, 'false' otherwise.
  ## Default: true.
  enabled: true
  ## @param healthcheck.initialDelaySeconds The number of seconds after the container has started
  ## before liveness and/or readiness probes are initiated.
  ## This allows the application to initialize before checks begin.
  ## Default: 30 seconds.
  initialDelaySeconds: 30
  ## @param healthcheck.periodSeconds The frequency (in seconds) at which Kubernetes performs the health checks.
  ## Default: 10 seconds.
  periodSeconds: 10
  ## @param healthcheck.timeoutSeconds The number of seconds after which the probe times out if no response is received.
  ## If the timeout is exceeded, the probe is considered a failure.
  ## Default: 5 seconds.
  timeoutSeconds: 5
  ## @param healthcheck.successThreshold The minimum number of consecutive successes required for a probe
  ## to be considered successful after having failed.
  ## Default: 1.
  successThreshold: 1
  ## @param healthcheck.failureThreshold The number of consecutive failures required for a probe
  ## to be considered failed, after which Kubernetes will act (e.g., restart the container for liveness probes).
  ## Default: 3.
  failureThreshold: 3

################################################################################
## @section Pod Configuration
## This section allows for advanced configuration of the Kubernetes Pods that run the application,
## including annotations and security settings at both the pod and container level.
## These settings enable fine-grained control over pod behavior and security posture.
################################################################################
podAnnotations: {}
## @param podAnnotations Optional annotations to add to the Pod metadata.
## This can be used for tool-specific configurations, reporting, or descriptive metadata
## that does not fit into labels.
## Example:
##   podAnnotations:
##     prometheus.io/scrape: "true"
##     prometheus.io/port: "8080"

podSecurityContext: {}
## @param podSecurityContext Pod-level Security Context to apply to the Pod.
## This defines privilege and access control settings for the *entire Pod and all containers within it*.
## Settings here include:
##   - `runAsUser`, `runAsGroup`: Specify the user and group ID for the Pod's processes.
##   - `fsGroup`: The group ID that owns the Pod's volumes.
##   - `seLinuxOptions`: SELinux labels to apply.
##   - `sysctls`: List of kernel parameters to set for the Pod.
## Example:
##   podSecurityContext:
##     runAsUser: 1001
##     fsGroup: 1001
##     runAsNonRoot: true # Recommended for security

securityContext: {}
## @param securityContext Container-level Security Context to apply to the main application container.
## This defines privilege and access control settings for *individual containers*.
## Settings here take precedence over equivalent settings defined in `podSecurityContext` for this container.
## Settings include:
##   - `allowPrivilegeEscalation`: Controls whether a process can gain more privileges than its parent. Setting to `false` is a security best practice.
##   - `capabilities`: Linux capabilities to add or drop from the container. Dropping `ALL` and adding only necessary ones is a best practice.
##   - `readOnlyRootFilesystem`: Mounts the container's root filesystem as read-only. Recommended where possible.
##   - `runAsNonRoot`: Forces the container to run as a non-root user. Recommended.
##   - `seccompProfile`: The seccomp profile to apply to the container.
## Example:
##   securityContext:
##     allowPrivilegeEscalation: false
##     readOnlyRootFilesystem: true
##     runAsNonRoot: true
##     capabilities:
##       drop:
##         - ALL

################################################################################
## @section Autoscaling Configuration
## This section configures the Kubernetes Horizontal Pod Autoscaler (HPA) for the deployment.
## When enabled, the HPA automatically scales the number of Pods based on observed CPU utilization,
## memory utilization, or other custom metrics.
################################################################################
autoscaling:
  ## @param autoscaling.enabled Enable or disable HPA.
  ## Default: false.
  enabled: false
  # minReplicas: 1 # Minimum replicas for HPA.
  # maxReplicas: 10 # Maximum replicas for HPA.
  # targetCPUUtilizationPercentage: 80 # Target CPU utilization for scaling.
  # targetMemoryUtilizationPercentage: 80 # Target memory utilization for scaling.
  # metrics: [] # Custom metrics for HPA.
  # behavior: {} # Fine-tune HPA scaling behavior.

################################################################################
## @section Node Selection & Scheduling
## Configures Kubernetes Pod scheduling based on node labels, taints, and preferences.
################################################################################
nodeSelector: {}
## @param nodeSelector Node labels required for Pod scheduling.
## Pods will only be scheduled on nodes matching these key-value pairs.
## Example:
##   nodeSelector:
##     kubernetes.io/os: linux
##     disktype: ssd

tolerations: []
## @param tolerations Taints that Pods can tolerate, allowing scheduling on tainted nodes.
## Tolerations allow Pods to be scheduled on nodes that might otherwise repel them.
## Example:
##   tolerations:
##     - key: "special-node"
##       operator: "Exists"
##       effect: "NoSchedule"

affinity: {}
## @param affinity Advanced Pod scheduling rules, including node affinity and pod affinity/anti-affinity.
## Provides more granular control than nodeSelector for attracting or repelling Pods to/from nodes.
## Example (Node Affinity):
##   affinity:
##     nodeAffinity:
##       requiredDuringSchedulingIgnoredDuringExecution:
##         nodeSelectorTerms:
##           - matchExpressions:
##               - key: kubernetes.io/e2e-az-name
##                 operator: In
##                 values:
##                   - e2e-az1
##                   - e2e-az2

################################################################################
## @section RBAC Configuration
## Configures Role-Based Access Control (RBAC) resources for the Helm chart.
## RBAC resources define permissions for ServiceAccounts to interact with Kubernetes APIs.
################################################################################
rbac:
  ## @param rbac.create If true, create RBAC resources (ServiceAccount, Role/ClusterRole, RoleBinding/ClusterRoleBinding).
  ## It is a {Link: best practice https://spacelift.io/blog/kubernetes-rbac} to enable RBAC in production clusters.
  ## Default: true.
  create: true

################################################################################
## @section Service Account Configuration
## Configures the Kubernetes ServiceAccount used by the application's pods.
## ServiceAccounts provide an identity for processes running in Pods.
################################################################################
serviceAccount:
  ## @param serviceAccount.create If true, a ServiceAccount will be created.
  ## If false, the Pods will use the default ServiceAccount for the namespace
  ## or the ServiceAccount specified by 'serviceAccount.name'.
  ## Default: true.
  create: true
  ## @param serviceAccount.annotations Optional annotations to add to the ServiceAccount.
  ## These can be used for various purposes, such as linking to cloud provider roles (e.g., for IRSA). 
  ## Example (for AWS EKS IRSA):
  ##   serviceAccount.annotations:
  ##     eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/my-irsa-role
  annotations: {}
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If 'serviceAccount.create' is true and this is left empty, a name will be generated
  ## using the Helm chart's fullname template.
  ## If 'serviceAccount.create' is false and this is left empty, the default ServiceAccount
  ## for the namespace will be used.
  ## Default: "" (empty string, which results in a generated name if 'create' is true).
  name: ""


## @section Ingress
## Configures the Ingress resource for exposing the application service.
ingress:
  ## @param ingress.enabled Enable or disable the Ingress resource.
  ## If false, no Ingress object will be created.
  ## Default: false.
  enabled: false
  ## Optional annotations for the Ingress.
  ## Example: cert-manager.io/cluster-issuer: "letsencrypt"
  # annotations: {}
  ## ingress.className IngressClass name to use.
  ## Example: "nginx"
  # className: ""
  ## ingress.host Hostname for the Ingress rule.
  ## Example: "myapp.example.com"
  # host: ""
  ## ingress.path Path for the Ingress rule.
  ## Example: "/api"
  # path: "/"
  ## ingress.pathType Path type for the Ingress rule.
  ## Options: Prefix, Exact, ImplementationSpecific.
  # pathType: "Prefix"
  ## ingress.tls Configure TLS for the Ingress host.
  ## Example:
  ##   tls:
  ##     - hosts:
  ##         - myapp.example.com
  ##       secretName: myapp-tls-secret
  # tls: []

################################################################################
## @section volumeClaim parameters
################################################################################
##
volumeClaim:
  ## @param volumeClaim.type Type of volume claim to create
  type: pvc
  claims:
    ## @param volumeClaim.claims[0].name Name of the volumeClaim
    - name: shared-tmp
      ## @param volumeClaim.claims[0].accessMode Access mode for volumeClaim Required ReadWriteMany
      accessMode: ReadWriteMany
      ## @param volumeClaim.claims[0].storageClass Specify the storage class of the volumeClaim
      storageClass: hostpath
      ## @param volumeClaim.claims[0].mountPath Specify the mountPath of the volumeClaim
      mountPath: "/tmp/shared"
      ## @param volumeClaim.claims[0].size Specify the size of the volumeClaim
      size: "10Gi"
    ## @param volumeClaim.claims[1].name Name of the volumeClaim
    - name: outputs
      ## @param volumeClaim.claims[1].accessMode Access mode for volumeClaim Required ReadWriteMany
      accessMode: ReadWriteMany
      ## @param volumeClaim.claims[1].storageClass Specify the storage class of the volumeClaim
      storageClass: hostpath
      ## @param volumeClaim.claims[1].mountPath Specify the mountPath of the volumeClaim
      mountPath: "/app/outputs"
      ## @param volumeClaim.claims[1].size Specify the size of the volumeClaim
      size: "20Gi"
    ## @param volumeClaim.claims[2].name Name of the volumeClaim
    - name: data
      ## @param volumeClaim.claims[2].accessMode Access mode for volumeClaim Required ReadWriteMany
      accessMode: ReadWriteMany
      ## @param volumeClaim.claims[2].storageClass Specify the storage class of the volumeClaim
      storageClass: hostpath
      ## @param volumeClaim.claims[2].mountPath Specify the mountPath of the volumeClaim
      mountPath: "/app/data"
      ## @param volumeClaim.claims[2].size Specify the size of the volumeClaim
      size: "10Gi"

################################################################################
## @section Service parameters
################################################################################
##
service:
  ## @param service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types)
  ##
  type: ClusterIP
  ## @param service.port Service port for client connections
  ##
  port: 80
  ## @param service.targetPort Service target port the application listens on inside the container
  ##
  targetPort: 5000
  ## @param service.annotations Annotations to add to the Kubernetes Service
  ## Example:
  ##   service.annotations:
  ##     service.beta.kubernetes.io/do-loadbalancer-size-slug: "lb-small"
  annotations: {}

################################################################################
## @section minio parameters
################################################################################
##
minio:
  ## @param minio.enabled Enable minio.
  ## Defaulted to false.
  ## For information on configuring minio please reference [minio documentation](https://github.com/bitnami/charts/blob/main/bitnami/minio/values.yaml)
  enabled: false


################################################################################
## @section postgresql parameters
################################################################################
##
postgresql:
  ## @param postgresql.enabled Enable postgresql
  ## Defaulted to false.
  ## For more information on configuring postgresql please reference [postgresql documentation](https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml)
  enabled: false

################################################################################
## @section External Database Configuration
## Configures connection to an external database.
## Set `enabled: true` to use an external database instead of deploying an internal one.
################################################################################
database:
  external:
    ## @param database.external.enabled Enable or disable the use of an external database.
    ## Default: false (internal database deployment is assumed).
    enabled: false
    ## database.external.host Hostname or IP address of the external database.
    # host: "my-external-db.example.com"
    ## database.external.port Port number of the external database.
    # port: 5432
    ## database.external.user Username for connecting to the external database.
    # user: "dbuser"
    ## database.external.password Password for connecting to the external database user.
    # password: "dbpassword"
    ## database.external.name Name of the database to connect to.
    # name: "mydbname"
    ## database.external.sslmode SSL mode for the database connection (e.g., "require", "verify-full").
    # sslmode: ""
